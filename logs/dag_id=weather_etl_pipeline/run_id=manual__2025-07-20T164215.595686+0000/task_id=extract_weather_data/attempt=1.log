{"timestamp":"2025-07-20T16:42:16.258522","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-07-20T16:42:16.258977","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/weather_etl_dag.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-07-20T16:42:16.285623Z","level":"info","event":"Task instance is in running state","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-20T16:42:16.286250Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.QUEUED","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-20T16:42:16.286538Z","level":"info","event":"Current task name:extract_weather_data","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-20T16:42:16.286852Z","level":"info","event":"Dag name:weather_etl_pipeline","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-20T16:42:17.468565Z","level":"error","event":"Traceback (most recent call last):","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-20T16:42:17.469147Z","level":"error","event":"  File \"/opt/airflow/scripts/extract_weather.py\", line 5, in <module>","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-20T16:42:17.471893Z","level":"error","event":"    conn = snowflake.connector.connect(","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-20T16:42:17.472150Z","level":"error","event":"           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-20T16:42:17.472343Z","level":"error","event":"  File \"/home/airflow/.local/lib/python3.12/site-packages/snowflake/connector/__init__.py\", line 54, in Connect","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-20T16:42:17.472560Z","level":"error","event":"    return SnowflakeConnection(**kwargs)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-20T16:42:17.472729Z","level":"error","event":"           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-20T16:42:17.472875Z","level":"error","event":"  File \"/home/airflow/.local/lib/python3.12/site-packages/snowflake/connector/connection.py\", line 554, in __init__","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-20T16:42:17.473015Z","level":"error","event":"    self.connect(**kwargs)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-20T16:42:17.473155Z","level":"error","event":"  File \"/home/airflow/.local/lib/python3.12/site-packages/snowflake/connector/connection.py\", line 872, in connect","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-20T16:42:17.473291Z","level":"error","event":"    self.__config(**kwargs)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-20T16:42:17.473435Z","level":"error","event":"  File \"/home/airflow/.local/lib/python3.12/site-packages/snowflake/connector/connection.py\", line 1403, in __config","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-20T16:42:17.473597Z","level":"error","event":"    self._host = construct_hostname(kwargs.get(\"region\"), self._account)","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-20T16:42:17.473750Z","level":"error","event":"                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-20T16:42:17.473895Z","level":"error","event":"  File \"/home/airflow/.local/lib/python3.12/site-packages/snowflake/connector/util_text.py\", line 251, in construct_hostname","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-20T16:42:17.474036Z","level":"error","event":"    if account.find(\".\") > 0 and _is_china_region(account.split(\".\")[1]):","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-20T16:42:17.474181Z","level":"error","event":"       ^^^^^^^^^^^^","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-20T16:42:17.474334Z","level":"error","event":"AttributeError: 'NoneType' object has no attribute 'find'","chan":"stderr","logger":"task"}
{"timestamp":"2025-07-20T16:42:17.572756","level":"error","event":"Task failed with exception","logger":"task","error_detail":[{"exc_type":"CalledProcessError","exc_value":"Command '['/home/airflow/.local/bin/python', '/opt/airflow/scripts/extract_weather.py']' returned non-zero exit status 1.","exc_notes":[],"syntax_error":null,"is_cause":false,"frames":[{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/execution_time/task_runner.py","lineno":877,"name":"run"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/execution_time/task_runner.py","lineno":1164,"name":"_execute_task"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/bases/operator.py","lineno":397,"name":"wrapper"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/providers/standard/operators/python.py","lineno":217,"name":"execute"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/providers/standard/operators/python.py","lineno":240,"name":"execute_callable"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/execution_time/callback_runner.py","lineno":81,"name":"run"},{"filename":"/opt/airflow/dags/weather_etl_dag.py","lineno":20,"name":"run_extract_script"},{"filename":"/usr/local/lib/python3.12/subprocess.py","lineno":571,"name":"run"}],"is_group":false,"exceptions":[]}]}
{"timestamp":"2025-07-20T16:42:17.592588Z","level":"info","event":"Task instance in failure state","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-20T16:42:17.593238Z","level":"info","event":"Task start","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-20T16:42:17.593550Z","level":"info","event":"Task:<Task(PythonOperator): extract_weather_data>","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-20T16:42:17.593859Z","level":"info","event":"Failure caused by Command '['/home/airflow/.local/bin/python', '/opt/airflow/scripts/extract_weather.py']' returned non-zero exit status 1.","chan":"stdout","logger":"task"}
